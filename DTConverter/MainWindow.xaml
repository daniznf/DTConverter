<!--
    DT Converter - Dani's Tools Video Converter    
    Copyright (C) 2021 Daniznf

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.
    
    https://github.com/daniznf/DTConverter
-->
<Window x:Class="DTConverter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DTConverter"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Icon="DTConverter_icon.ico"
        Name="DTWindow"
        Title="DT Converter" Width="1280" Height="800" MinWidth="800" MinHeight="480">
    <Window.Resources>
        <SolidColorBrush x:Key="Sky1" Color="#bccad6"/>
        <SolidColorBrush x:Key="Sky2" Color="#8d9db6"/>
        <SolidColorBrush x:Key="Sky3" Color="#667292"/>
        <SolidColorBrush x:Key="Sky4" Color="#f1e3dd"/>
        <SolidColorBrush x:Key="Sky5" Color="#cfe0e8"/>
        <SolidColorBrush x:Key="Sky6" Color="#b7d7e8"/>
        <SolidColorBrush x:Key="Sky7" Color="#87bdd8"/>
        <SolidColorBrush x:Key="Sky8" Color="#daebe8"/>

        <local:ConversionParameters x:Key="CP" />
        <local:BackgroundConverter x:Key="BkgConverter"/>

        <ObjectDataProvider x:Key="VideoEncodersValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:VideoEncoders"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="TimeDurationValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:DurationTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style TargetType="StackPanel" x:Key="StyleStackPanelBase">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="4px"/>
        </Style>
        <Style TargetType="StackPanel" BasedOn="{StaticResource StyleStackPanelBase}" />

        <Style TargetType="GridSplitter" x:Key="StyleGridSplitterBase">
            <Setter Property="Background" Value="{StaticResource Sky1}"/>
        </Style>
        <Style TargetType="GridSplitter" BasedOn="{StaticResource StyleGridSplitterBase}" />

        <Style TargetType="Label" x:Key="StyleLabelBase">
            <Setter Property="Width" Value="96px"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="Label" BasedOn="{StaticResource StyleLabelBase}"/>

        <Style TargetType="TabItem" x:Key="StyleTabItemBase">
            <Setter Property="Width" Value="128px"/>
            <Setter Property="Height" Value="32px"/>
            <Setter Property="Margin" Value="-2px,0,0,0"/>
        </Style>
        <Style TargetType="TabItem" BasedOn="{StaticResource StyleTabItemBase}"/>

        <Style TargetType="TextBox" x:Key="StyleTextBoxBase">
            <Setter Property="Width" Value="32px"/>
            <Setter Property="Height" Value="24px"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource StyleTextBoxBase}"/>

        <Style TargetType="ComboBox"  x:Key="StyleComboBoxBase">
            <Setter Property="Width" Value="48px"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource StyleComboBoxBase}"/>

        <Style TargetType="CheckBox"  x:Key="StyleCheckBoxBase">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource StyleCheckBoxBase}"/>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource CP}"/>
    </Window.DataContext>
    <Window.Background >
        <StaticResource ResourceKey="Sky1"/>
    </Window.Background>
    <DockPanel Margin="2px,0,2px,0">
        <StatusBar Height="32px" DockPanel.Dock="Bottom" Background="Transparent">
            <StatusBarItem Name="SttMessages" Content="A lot of messages here" HorizontalAlignment="Left"  />
            <StatusBarItem HorizontalAlignment="Right">
                <StackPanel Name="PnlInputVideoProperties" HorizontalAlignment="Right" Margin="0">
                    <StackPanel.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Margin" Value="2px,0,2px,0"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="Input:"/>
                    <TextBlock Text="{Binding SourceInfo.VideoResolution}" HorizontalAlignment="Right"/>
                    <TextBlock Text="{Binding SourceInfo.FrameRate}" HorizontalAlignment="Right"/>
                    <TextBlock Text="FPS"/>
                    <TextBlock Text="{Binding SourceInfo.VideoBitrate}" HorizontalAlignment="Right"/>
                    <TextBlock Text="Kb/s"/>
                    <TextBlock Text="{Binding SourceInfo.VideoCodec}" HorizontalAlignment="Right"/>
                    <TextBlock Text="{Binding SourceInfo.Duration.HMS}" HorizontalAlignment="Right"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" MinWidth="200px"/>
                <ColumnDefinition Width="2px"/>
                <ColumnDefinition Width="6*" MinWidth="576px" />
            </Grid.ColumnDefinitions>
            <DockPanel>
                <Label Content="Drop files here!" AllowDrop="True" Drop="TvwVideos_Drop" DockPanel.Dock="Top" HorizontalContentAlignment="Center" Width="256px" Margin="0,4px,0,4px" />
                <Button Name="BtnConvert" Content="Start Conversions" DockPanel.Dock="Bottom" Margin="0,4px,0,0" Background="{StaticResource Sky4}" Height="64px" FontSize="14px" Click="BtnStartConvert_Click"/>
                <TreeView Name="TvwVideos" Grid.Column="0" Margin="0" AllowDrop="True" Drop="TvwVideos_Drop" SelectedItemChanged="TvwVideos_SelectedItemChanged">
                    <TreeView.Resources>
                        <ContextMenu x:Key="MnDirectory">
                            <MenuItem Header="Check items" Click="MnCheckItems_Click"/>
                            <MenuItem Header="Uncheck items" Click="MnUncheckItems_Click"/>
                            <MenuItem Header="Paste Settings to all" Click="MnPasteSettingsAll_Click"/>
                            <Separator/>
                            <MenuItem Header="Open containing folder" Click="MnOpenContainingFolder_Click"/>
                            <Separator/>
                            <MenuItem Header="Remove directory" Click="MnRemoveItem_Click"/>
                        </ContextMenu>
                        <ContextMenu x:Key="MnFile">
                            <MenuItem Header="Copy Settings" Click="MnCopySettings_Click"/>
                            <MenuItem Header="Paste Settings" Click="MnPasteSettings_Click"/>
                            <MenuItem Header="Reset Settings" Click="MnResetSettings_Click"/>
                            <Separator/>
                            <MenuItem Header="Open containing folder" Click="MnOpenContainingFolder_Click"/>
                            <Separator/>
                            <MenuItem Header="Remove file" Click="MnRemoveItem_Click"/>
                        </ContextMenu>

                        <Style TargetType="StackPanel">
                            <Setter Property="Orientation" Value="Horizontal"/>
                            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=MnFile}" />
                            <Setter Property="Background" Value="{Binding VideoConversionStatus , Converter={StaticResource BkgConverter} }"/>
                        </Style>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="HorizontalAlignment" Value="Left"/>
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="ContextMenu" Value="{StaticResource ResourceKey=MnDirectory}" />
                            <EventSetter Event="KeyDown" Handler="TreeViewItem_KeyDown"/>
                            <EventSetter Event="KeyUp" Handler="TreeViewItem_KeyUp"/>
                        </Style>
                        <Style TargetType="CheckBox" >
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="IsChecked" Value="{Binding IsConversionEnabled}" />
                            <Setter Property="IsEnabled" Value="{Binding IsValid}" />
                        </Style>
                        <Style TargetType="Label">
                            <Setter Property="Padding" Value="5px,0,5px,0"/>
                        </Style>
                    </TreeView.Resources>
                    <TreeView.ContextMenu >
                        <ContextMenu  Placement="Mouse">
                            <MenuItem Header="Check All" Click="MnCheckAll_Click" />
                            <MenuItem Header="Uncheck All" Click="MnUncheckAll_Click" />
                            <Separator/>
                            <MenuItem Header="Clear All" Click="MnClearAll_Click" />
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeViewItem Header="Directory 1">
                        <StackPanel Tag="File A" Focusable="True">
                            <CheckBox/>
                            <Label Content="File A" Focusable="True" IsTabStop="True"/>
                        </StackPanel>
                        <StackPanel Tag="File B">
                            <CheckBox/>
                            <Label Content="File B"/>
                        </StackPanel>
                        <StackPanel Tag="File C">
                            <CheckBox/>
                            <Label Content="File C"/>
                        </StackPanel>
                    </TreeViewItem>
                    <TreeViewItem Header="Directory 2">
                        <TreeViewItem Header="Directory 3">
                            <StackPanel Tag="File D">
                                <CheckBox/>
                                <Label Content="File D"/>
                            </StackPanel>
                            <StackPanel Tag="File E">
                                <CheckBox/>
                                <Label Content="File E"/>
                            </StackPanel>
                            <StackPanel Tag="File F">
                                <CheckBox/>
                                <Label Content="File F"/>
                            </StackPanel>
                        </TreeViewItem>
                        <StackPanel Tag="File G">
                            <CheckBox/>
                            <Label Content="File G"/>
                        </StackPanel>
                        <StackPanel Tag="File H">
                            <CheckBox/>
                            <Label Content="File H"/>
                        </StackPanel>
                        <StackPanel Tag="File I">
                            <CheckBox/>
                            <Label Content="File I"/>
                        </StackPanel>
                    </TreeViewItem>
                </TreeView>
            </DockPanel>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ResizeDirection="Columns" Margin="0,34px,0,0px"/>
            <TabControl Grid.Column="2" TabStripPlacement="Top" Margin="0,0,0,0" IsEnabled="{Binding IsValid}">
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Margin="0">
                            <CheckBox IsChecked="{Binding IsVideoEnabled}" />
                            <TextBlock Text="Video" HorizontalAlignment="Center" Margin="10,0,0,0" />
                        </StackPanel>
                    </TabItem.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="4px"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <DockPanel Name="PnlVideoSettings">
                            <DockPanel.Resources>
                                <Style TargetType="Label"/>
                            </DockPanel.Resources>
                            <Label Name="LblDestinationVideoPath" DockPanel.Dock="Bottom" Content="{Binding DestinationVideoPath}" HorizontalAlignment="Center">
                                <Label.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Open containing folder" Click="MnOpenContainingFolder_Click"/>
                                    </ContextMenu>
                                </Label.ContextMenu>
                            </Label>

                            <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                                <StackPanel Orientation="Vertical" IsEnabled="{Binding IsVideoEnabled}" ToolTip="Values for conversion. Use 0 to keep deault">

                                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center" >
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Encoder"/>
                                            <ComboBox Name="CbxVideoEncoders" Width="128px" SelectedIndex="0" Text="{Binding VideoEncoder}" ItemsSource="{Binding Source={StaticResource VideoEncodersValues}}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsEnabled="{Binding IsVideoEncoderNotCopy}">
                                            <Label Content="Resolution"/>
                                            <TextBox Name="TxtHorizontalResolution" Text="{Binding  VideoResolutionParams.Horizontal}" KeyUp="AnyonePreviewRegeneration_PreviewKeyUp" />
                                            <Label Content="x" Width="24px" HorizontalContentAlignment="Center"/>
                                            <TextBox Name="TxtVerticalResolution" Text="{Binding VideoResolutionParams.Vertical}" KeyUp="AnyonePreviewRegeneration_PreviewKeyUp"/>
                                            <Label Content="px" HorizontalContentAlignment="Left"/>
                                            <Label Content="Multiple" />
                                            <ComboBox Name="CbxResolutionMultiple" SelectedIndex="0" Text="{Binding VideoResolutionParams.Multiple}">
                                                <ComboBoxItem Content="0"/>
                                                <ComboBoxItem Content="2"/>
                                                <ComboBoxItem Content="4"/>
                                                <ComboBoxItem Content="8"/>
                                                <ComboBoxItem Content="16"/>
                                            </ComboBox>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel IsEnabled="{Binding IsVideoEncoderNotCopy}">
                                        <StackPanel Orientation="Horizontal">
                                            <Label Content="Framerate"/>
                                            <TextBox Name="TxtFPS" Text="{Binding OutFrameRate}"/>
                                            <Label Content="FPS" HorizontalContentAlignment="Left" />
                                        </StackPanel>
                                        <StackPanel Name="PnlVideoBitrate" Orientation="Horizontal" IsEnabled="{Binding IsVideoEncoderH264}">
                                            <Label Content="Bitrate" />
                                            <TextBox Name="TxtVideoBitrate"  Text="{Binding VideoBitrate}" />
                                            <Label Content="Mbps" HorizontalContentAlignment="Left" />
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <StackPanel.Resources>
                                            <Style TargetType="Label">
                                                <Setter Property="Width" Value="64px"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="5px,0,5px,0"/>
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource StyleTextBoxBase}">
                                                <EventSetter Event="PreviewKeyUp" Handler="AnyonePreviewRegeneration_PreviewKeyUp"/>
                                            </Style>
                                        </StackPanel.Resources>

                                        <StackPanel Orientation="Vertical">
                                            <CheckBox Name="ChkEnableCrop" Content="Crop" Checked="ChkEnableCrop_Checked" Unchecked="ChkEnableCrop_Unchecked" IsChecked="True"/>
                                            <DockPanel Name="PnlCrop" LastChildFill="False" Width="224px" Height="128px" Visibility="Visible">
                                                <StackPanel DockPanel.Dock="Top">
                                                    <Label Content="Top" />
                                                    <TextBox Name="txtCropTop" Text="{Binding CropParams.Top}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Bottom">
                                                    <Label Content="Bottom"/>
                                                    <TextBox Name="txtCropBottom" Text="{Binding CropParams.Bottom}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Left">
                                                    <Label Content="Left"/>
                                                    <TextBox Name="txtCropLeft" Text="{Binding CropParams.Left}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Right">
                                                    <Label Content="Right"/>
                                                    <TextBox Name="txtCropRight" Text="{Binding CropParams.Right}"/>
                                                </StackPanel>
                                            </DockPanel>
                                        </StackPanel>

                                        <StackPanel Orientation="Vertical" >
                                            <CheckBox Name="ChkEnablePadding" Content="Padding" Checked="ChkEnablePadding_Checked" Unchecked="ChkEnablePadding_Unchecked" IsChecked="True"/>
                                            <DockPanel Name="PnlPadding" LastChildFill="False" Width="224px" Height="128px" Visibility="Visible" >
                                                <StackPanel DockPanel.Dock="Top">
                                                    <Label Content="Top" />
                                                    <TextBox Name="txtPaddingTop" Text="{Binding PaddingParams.Top}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Bottom">
                                                    <Label Content="Bottom"/>
                                                    <TextBox Name="txtPaddingBottom" Text="{Binding PaddingParams.Bottom}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Left">
                                                    <Label Content="Left" />
                                                    <TextBox Name="txtPaddingLeft" Text="{Binding PaddingParams.Left}"/>
                                                </StackPanel>
                                                <StackPanel DockPanel.Dock="Right">
                                                    <Label Content="Right" />
                                                    <TextBox Name="txtPaddingRight" Text="{Binding PaddingParams.Right}"/>
                                                </StackPanel>
                                            </DockPanel>
                                        </StackPanel>

                                        <StackPanel Orientation="Vertical" Width="128">
                                            <Label Content="Rotation" Width="64px"/>
                                            <ComboBox Name="CbxRotation"  SelectedIndex="0" Text="{Binding Rotation}" SelectionChanged="CbxRotation_SelectionChanged">
                                                <ComboBoxItem Content="0" />
                                                <ComboBoxItem Content="90"/>
                                                <ComboBoxItem Content="180"/>
                                                <ComboBoxItem Content="270"/>
                                            </ComboBox>
                                            <CheckBox Name="ChkRotateMetadataOnly" Content="Metadata Only" IsChecked="{Binding RotateMetadataOnly}" IsEnabled="{Binding IsVideoEncoderCopy}"/>
                                        </StackPanel>
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical">
                                        <StackPanel.Resources>
                                            <Style TargetType="Label">
                                                <Setter Property="Width" Value="128px"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                            </Style>
                                            <Style TargetType="TextBox" BasedOn="{StaticResource StyleTextBoxBase}">
                                                <EventSetter Event="PreviewKeyUp" Handler="AnyonePreviewRegeneration_PreviewKeyUp"/>
                                            </Style>
                                            <Style TargetType="ComboBox" BasedOn="{StaticResource StyleComboBoxBase}">
                                                <EventSetter Event="SelectionChanged" Handler="CbxHorizontalVerticalSlices_SelectionChanged"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <CheckBox Name="ChkEnableSlices" Content="Slice" Checked="ChkEnableSlices_Checked" Unchecked="ChkEnableSlices_Unchecked" IsChecked="True" />
                                        <StackPanel Name="PnlSlices" Orientation="Vertical" Visibility="Visible">
                                            <StackPanel>
                                                <Label Content="Horizontal slices"/>
                                                <ComboBox Name="CbxHorizontalSlices" SelectedIndex="0" Text="{Binding SliceParams.HorizontalNumber}">
                                                    <ComboBoxItem Content="1"/>
                                                    <ComboBoxItem Content="2"/>
                                                    <ComboBoxItem Content="3"/>
                                                    <ComboBoxItem Content="4"/>
                                                    <ComboBoxItem Content="5"/>
                                                    <ComboBoxItem Content="6"/>
                                                    <ComboBoxItem Content="7"/>
                                                    <ComboBoxItem Content="8"/>
                                                </ComboBox>
                                                <Label Content="Horizontal overlap" />
                                                <TextBox Name="TxtHOverlap" Text="{Binding SliceParams.HorizontalOverlap}"/>
                                                <Label Content="px" HorizontalContentAlignment="Left" Width="32px"/>
                                            </StackPanel>
                                            <StackPanel>
                                                <Label Content="Vertical slices" />
                                                <ComboBox Name="CbxVerticalSlices" SelectedIndex="0" Text="{Binding SliceParams.VerticalNumber}">
                                                    <ComboBoxItem Content="1"/>
                                                    <ComboBoxItem Content="2"/>
                                                    <ComboBoxItem Content="3"/>
                                                    <ComboBoxItem Content="4"/>
                                                    <ComboBoxItem Content="5"/>
                                                    <ComboBoxItem Content="6"/>
                                                    <ComboBoxItem Content="7"/>
                                                    <ComboBoxItem Content="8"/>
                                                </ComboBox>
                                                <Label Content="Vertical overlap" />
                                                <TextBox Name="TxtVOverlap" Text="{Binding SliceParams.VerticalOverlap}" />
                                                <Label Content="px" HorizontalContentAlignment="Left" Width="32px"/>
                                            </StackPanel>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </ScrollViewer>
                        </DockPanel>

                        <GridSplitter Grid.Row="1"  HorizontalAlignment="Stretch" ResizeDirection="Rows"/>

                        <DockPanel Grid.Row="2">
                            <DockPanel.Resources>
                                <Style TargetType="Image">
                                    <Setter Property="Margin" Value="1px"/>
                                </Style>
                            </DockPanel.Resources>
                            <DockPanel DockPanel.Dock="Bottom" >
                                <DockPanel.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Width" Value="32px"/>
                                        <Setter Property="Height" Value="32px"/>
                                        <Setter Property="Margin" Value="0,2px,0,0"/>
                                    </Style>
                                </DockPanel.Resources>
                                <Button Name="BtnSetStart" FontFamily="Segoe MDL2 Assets" FontSize="14px" Content="&#xf745;" DockPanel.Dock="Left" Click="BtnSetStart_Click"/>
                                <Label Content="{Binding PreviewTimeHMS, Mode=OneWay}" Width="96px" DockPanel.Dock="Right" VerticalAlignment="Center"/>
                                <Button Name="BtnSetEnd" FontFamily="Segoe MDL2 Assets" FontSize="14px" Content="&#xf743;" DockPanel.Dock="Right" Click="BtnSetEnd_Click"/>
                                <Slider Maximum="{Binding SourceInfo.Duration.Seconds}" Margin="4px,0,4px,0" VerticalAlignment="Center" LargeChange="10" SmallChange="1" TickFrequency="10" Value="{Binding PreviewTimeSeconds}" PreviewMouseUp="AnyonePreviewRegeneration_PreviewMouseUp" />
                            </DockPanel>
                            <Grid Background="Gray" Name="GrdAllPreviews">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColPreviewIn" Width="1*"/>
                                    <ColumnDefinition Name="ColPreviewOut" Width="{Binding ShowColPreviewOut}"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.Column="0">
                                    <CheckBox Visibility="Hidden" DockPanel.Dock="Top"/>
                                    <!-- this checkbox is here only for correct alignment -->
                                    <Grid Name="GrdPreviewIn" >
                                        <Image Name="ImgPvwIn"/>
                                    </Grid>
                                </DockPanel>
                                <DockPanel Grid.Column="1" >
                                    <CheckBox Name="ChkOriginal" DockPanel.Dock="Top" Content="Show original" Foreground="White" Checked="ChkOriginal_Checked" Unchecked="ChkOriginal_Unchecked" IsChecked="True"/>
                                    <Grid Name="GrdPreviewOut" HorizontalAlignment="Center">
                                        <!-- RowDefinitions and ColumnDefinitions will be added at runtime -->
                                        <Image Name="ImgPvwOut"/>
                                        <!-- up to RxC images will be added at runtime-->
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </DockPanel>
                    </Grid>
                </TabItem>
                <TabItem>
                    <TabItem.Header>
                        <StackPanel Width="96px" Margin="0">
                            <CheckBox IsChecked="{Binding IsAudioEnabled}" />
                            <TextBlock Text="Audio" HorizontalAlignment="Center" Margin="10,0,0,0" />
                        </StackPanel>
                    </TabItem.Header>
                    <Label Content="This section will be available soon..." HorizontalContentAlignment="Center" Width="300px"></Label>
                </TabItem>
                <TabItem Header="General">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                        <StackPanel Name="PnlGeneral" Orientation="Vertical" IsEnabled="{Binding IsConversionEnabled}" ToolTip="Values for conversion. Use 0 to keep deault">
                            <StackPanel Name="PnlStartTime" Orientation="Horizontal">
                                <Label Content="Start Time" />
                                <TextBox Name="TxtStartTime"  Text="{Binding StartTime.Seconds}" Width="92" KeyUp="TxtStartTime_KeyUp"/>
                                <ComboBox Name="CbxStartTimeUnit" Width="128" SelectedIndex="0" SelectionChanged="CbxStartTimeUnit_SelectionChanged">
                                    <ComboBoxItem Content="Seconds"/>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Name="PnlDurationTime" Orientation="Horizontal">
                                <Label Content="Duration Time" />
                                <TextBox Name="TxtDurationTime"  Text="{Binding DurationTime.Seconds}" Width="92" KeyUp="TxtDurationTime_KeyUp"/>
                                <ComboBox Name="CbxDurationTimeUnit" Width="128" SelectedItem="{Binding DurationTime.DurationType, Mode=OneWay}" SelectedIndex="0" SelectionChanged="CbxDurationTimeUnit_SelectionChanged" ItemsSource="{Binding Source={StaticResource TimeDurationValues}}"/>
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
            </TabControl>

            <StackPanel Grid.Column="2"  Height="32px" HorizontalAlignment="Right" VerticalAlignment="Top">
                <Label Name="LblName" Content="DT Converter" Width="192px"  FontWeight="Bold"/>
                <Menu Background="Transparent" Width="32px" Height="32px" FlowDirection="RightToLeft" >
                    <Menu.Resources>
                        <Style TargetType="Label"/>
                    </Menu.Resources>
                    <MenuItem >
                        <MenuItem.Header>
                            <Label Content="⁝" FontWeight="Bold" />
                        </MenuItem.Header>
                        <MenuItem Header="About" Click="MenuItem_Click"></MenuItem>
                    </MenuItem>
                </Menu>
            </StackPanel>
        </Grid>
    </DockPanel>
</Window>
